#!/bin/bash

set -e

# Cloudflare Warp
# =============================================================================

# create a tun device
if [ ! -e /dev/net/tun ]; then
  sudo mkdir -p /dev/net
  sudo mknod /dev/net/tun c 10 200
  sudo chmod 600 /dev/net/tun
fi

# start the dbus-daemon using sudo
sudo mkdir -p /run/dbus
if [ -f /run/dbus/pid ]; then
    sudo rm /run/dbus/pid
fi
sudo dbus-daemon --config-file=/usr/share/dbus-1/system.conf

# manually accept the tos
mkdir -p ~/.local/share/warp
printf 'yes' > ~/.local/share/warp/accepted-tos.txt
printf 'yes' > ~/.local/share/warp/accepted-teams-tos.txt

# start the daemon and wait for the daemon to start, default 5 seconds
if [ -n "${DEBUG}" ]; then
  sudo warp-svc --accept-tos &
else
  # NB: sed command > https://superuser.com/questions/380772/removing-ansi-color-codes-from-text-stream
  sudo warp-svc --accept-tos | sed -e 's/\x1b\[[0-9;]*m//g' | grep -v DEBUG | grep -v NewNeighbour &
fi

sleep "${WARP_START_DELAY}"
warp-cli --version

# handle warp client registration as required
/scripts/warp-register.sh

# set warp mode
echo " >> [warp-connect] setting Warp DNS families mode to off."
warp-cli dns families off || true  # this may fail when client is registered to an organization that prevents

# connect to the warp server
echo " >> [warp-connect] sending a connect command to the warp-cli client."
warp-cli connect

# Wait reasonably for warp to become connected
sleep "${WARP_START_DELAY}"

_cfwarp_resolv_updated=false
for i in $(seq 1 "${WARP_CONNECT_RETRY_MAX}"); do

  if [ "$(grep -c 'generated by cloudflare-warp' /etc/resolv.conf)" -eq 1 ]; then
    echo " >> [warp-connect] cloudflare-warp updated /etc/resolv.conf, okay to proceed."
    _cfwarp_resolv_updated=true
    break
  else
    echo " >> [warp-connect] waiting for cloudflare-warp to update /etc/resolv.conf..."
    sleep "${WARP_CONNECT_RETRY_SLEEP}"
  fi

done

# Exit if we did not get a _cfwarp_resolv_updated=true
if [[ ${_cfwarp_resolv_updated} != true ]]; then
  echo " >> [warp-connect] cloudflare-warp was not able to update /etc/resolv.conf; check if this container has NET_ADMIN capabilities!"
  exit 1
fi

_cfwarp_connected=false
for i in $(seq 1 "${WARP_CONNECT_RETRY_MAX}"); do

  if /scripts/warp-healthcheck.sh; then
    echo " >> [warp-connect] cloudflare-warp connection confirmed, okay to proceed."
    _cfwarp_connected=true
    break
  else
    echo " >> [warp-connect] waiting for warp connection..."
    sleep "${WARP_CONNECT_RETRY_SLEEP}"
  fi

done

# Exit if we did not get a _cfwarp_connected=true
if [[ ${_cfwarp_connected} != true ]]; then
  echo " >> [warp-connect] unable to obtain cloudflare-warp connection!"
  exit 1
fi
